# This is the default webserv configuration file,
# Use it as a template to create your own,

### --- STANDARDS --- ###
# Config is case-sensitive
# It is prohibited to comment a "location [ ]"
# Usage of ';' is prohibited at the end of line.
# Always use '=' to differentiate from keys and values.
# If multiple values:
#   - Whole line after '=' is stored on an std::string,
#   - Use the public method split( std::string, char ) to generate a vector.
#   - NB : Most cases the delimitor will be a WS ' ' or a COMMA ','.

server {
  listen = 8000
  server_name = server1
  root = ./www/html/
  redirect = $scheme://www.new-name.com$request_uri
  
  index = index.html
  body_size_limit = 100
  access_log = logs/server1.access.log
  error_page = /html/

  location = [
    root = ./www/html/
    path = /
    method = GET POST DELETE
    redirect = $scheme://www.new-name.com$request_uri
    cgi = .php /opt/homebrew/bin/php-cgi
    upload = /upload/media/
    autoindex = on
  ]
  location = [
    root = ./www/html/s/
    path = /s/
    method = GET POST DELETE
    redirect = $scheme://www.new-name.com$request_uri
    cgi = .php /opt/homebrew/bin/php-cgi
    upload = /upload/media/
    autoindex = on
  ]
}

server {
  listen = 8000
  server_name = server2
  root = ./www/html/
  redirect = $scheme://www.new-name.com$request_uri
  index = index.html
  body_size_limit = 100
  access_log = logs/server1.access.log
  error_page = /html/

  location = [
    root = ./www/html/
    path = /
    method = GET POST
    redirect = $scheme://www.new-name.com$request_uri
    cgi = .php /goinfre/abiari/.brew/bin/php-cgi
    upload = /upload/media/
    autoindex = on
  ]
}

server {
  listen = 8000
  server_name = server2
  root = ./www/html/
  redirect = $scheme://www.new-name.com$request_uri
  index = index.html
  body_size_limit = 100
  access_log = logs/server1.access.log
  error_page = /html/

  location = [
    root = ./www/html/
    path = /
    method = GET 
    redirect = $scheme://www.new-name.com$request_uri
    cgi = .php /goinfre/abiari/.brew/bin/php-cgi
    upload = /upload/media/
    autoindex = on
  ]

}

server {
  listen = 8080
  server_name = server1
  root = ./www/html/
  redirect = $scheme://www.new-name.com$request_uri
  index = index.html
  body_size_limit = 100
  access_log = logs/server1.access.log
  error_page = /html/

  location = [
    root = ./www/html/
    path = /
    method = GET 
    redirect = $scheme://www.new-name.com$request_uri
    cgi = .php /goinfre/abiari/.brew/bin/php-cgi
    upload = /upload/media/
    autoindex = on
  ]

}
server {
  listen = 8080
  server_name = server2
  root = ./www/html/
  redirect = $scheme://www.new-name.com$request_uri
  index = index.html
  body_size_limit = 100
  access_log = logs/server1.access.log
  error_page = /html/

  location = [
    root = ./www/html/
    path = /
    method = GET 
    redirect = $scheme://www.new-name.com$request_uri
    cgi = .php /goinfre/abiari/.brew/bin/php-cgi
    upload = /upload/media/
    autoindex = on
  ]

}
server {
  listen = 8080
  server_name = server2
  root = ./www/html/
  redirect = $scheme://www.new-name.com$request_uri
  index = index.html
  body_size_limit = 100
  access_log = logs/server1.access.log
  error_page = /html/

  location = [
    root = ./www/html/
    path = /
    method = GET 
    redirect = $scheme://www.new-name.com$request_uri
    cgi = .php /goinfre/abiari/.brew/bin/php-cgi
    upload = /upload/media/
    autoindex = on
  ]

}
